
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.14.0
 * Query Engine version: 717184b7b35ea05dfa71a3236b7af656013e1e49
 */
Prisma.prismaVersion = {
  client: "6.14.0",
  engine: "717184b7b35ea05dfa71a3236b7af656013e1e49"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Active_classScalarFieldEnum = {
  active_class_id: 'active_class_id',
  class_code: 'class_code',
  period: 'period',
  class_coordinator: 'class_coordinator'
};

exports.Prisma.AgendaScalarFieldEnum = {
  agenda_id: 'agenda_id',
  subject_class_id: 'subject_class_id',
  agenda_title: 'agenda_title',
  agenda_context: 'agenda_context',
  agenda_annouced: 'agenda_annouced',
  agenda_due: 'agenda_due'
};

exports.Prisma.EmployeeScalarFieldEnum = {
  employee_id: 'employee_id',
  employee_fn: 'employee_fn',
  employee_ln: 'employee_ln',
  employee_dob: 'employee_dob',
  employee_join: 'employee_join',
  employee_img: 'employee_img',
  employee_info: 'employee_info',
  employee_degree: 'employee_degree',
  employee_exp: 'employee_exp',
  employee_sal1: 'employee_sal1',
  employee_sal2: 'employee_sal2',
  employee_wh: 'employee_wh'
};

exports.Prisma.Employee_roleScalarFieldEnum = {
  employee_role_id: 'employee_role_id',
  role_id: 'role_id',
  employee_id: 'employee_id'
};

exports.Prisma.Final_gradeScalarFieldEnum = {
  final_grade_id: 'final_grade_id',
  subject_code: 'subject_code',
  final_grade: 'final_grade',
  student_id: 'student_id',
  test_period: 'test_period',
  created_at: 'created_at',
  final_status: 'final_status'
};

exports.Prisma.JobScalarFieldEnum = {
  job_id: 'job_id',
  parent_id: 'parent_id',
  job_company: 'job_company',
  job_title: 'job_title',
  work_email: 'work_email',
  work_number: 'work_number'
};

exports.Prisma.ParentScalarFieldEnum = {
  parent_id: 'parent_id',
  parent_fn: 'parent_fn',
  parent_ln: 'parent_ln',
  parent_dob: 'parent_dob',
  parent_pers_number: 'parent_pers_number',
  parent_pers_email: 'parent_pers_email'
};

exports.Prisma.PeriodScalarFieldEnum = {
  period: 'period',
  period_status: 'period_status'
};

exports.Prisma.RolesScalarFieldEnum = {
  role_id: 'role_id',
  role_name: 'role_name',
  role_description: 'role_description'
};

exports.Prisma.School_emailScalarFieldEnum = {
  school_num_id: 'school_num_id',
  school_reg: 'school_reg',
  school_email: 'school_email',
  school_email_label: 'school_email_label'
};

exports.Prisma.School_infoScalarFieldEnum = {
  school_reg: 'school_reg',
  school_name: 'school_name',
  school_address: 'school_address',
  school_lat: 'school_lat',
  school_long: 'school_long',
  school_princ: 'school_princ'
};

exports.Prisma.School_numScalarFieldEnum = {
  school_num_id: 'school_num_id',
  school_reg: 'school_reg',
  school_phone: 'school_phone',
  school_phone_label: 'school_phone_label'
};

exports.Prisma.StudentScalarFieldEnum = {
  student_id: 'student_id',
  mother_id: 'mother_id',
  father_id: 'father_id',
  student_fname: 'student_fname',
  student_lname: 'student_lname',
  student_dob: 'student_dob',
  student_account: 'student_account',
  student_pass: 'student_pass',
  note: 'note'
};

exports.Prisma.Subject_classScalarFieldEnum = {
  subject_class_id: 'subject_class_id',
  subject_code: 'subject_code',
  instructor: 'instructor'
};

exports.Prisma.SubjectsScalarFieldEnum = {
  subject_code: 'subject_code',
  subject_name: 'subject_name',
  subject_cat: 'subject_cat'
};

exports.Prisma.TestScalarFieldEnum = {
  test_id: 'test_id',
  test_title: 'test_title',
  test_description: 'test_description',
  subject_class_id: 'subject_class_id',
  test_total: 'test_total',
  test_visibility: 'test_visibility',
  test_annouced: 'test_annouced',
  test_due: 'test_due',
  test_period: 'test_period'
};

exports.Prisma.Test_resultScalarFieldEnum = {
  test_result_id: 'test_result_id',
  test_id: 'test_id',
  student_id: 'student_id',
  test_result: 'test_result',
  test_note: 'test_note'
};

exports.Prisma.ClassesScalarFieldEnum = {
  class_code: 'class_code',
  class_name: 'class_name',
  class_base: 'class_base'
};

exports.Prisma.Parent_formScalarFieldEnum = {
  parent_form_id: 'parent_form_id',
  parent_form_content: 'parent_form_content',
  parent_form_created: 'parent_form_created'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.active_classOrderByRelevanceFieldEnum = {
  class_code: 'class_code'
};

exports.Prisma.agendaOrderByRelevanceFieldEnum = {
  agenda_title: 'agenda_title',
  agenda_context: 'agenda_context'
};

exports.Prisma.employeeOrderByRelevanceFieldEnum = {
  employee_fn: 'employee_fn',
  employee_ln: 'employee_ln',
  employee_img: 'employee_img',
  employee_info: 'employee_info',
  employee_degree: 'employee_degree'
};

exports.Prisma.final_gradeOrderByRelevanceFieldEnum = {
  subject_code: 'subject_code',
  student_id: 'student_id',
  final_status: 'final_status'
};

exports.Prisma.jobOrderByRelevanceFieldEnum = {
  job_company: 'job_company',
  job_title: 'job_title',
  work_email: 'work_email',
  work_number: 'work_number'
};

exports.Prisma.parentOrderByRelevanceFieldEnum = {
  parent_fn: 'parent_fn',
  parent_ln: 'parent_ln',
  parent_pers_number: 'parent_pers_number',
  parent_pers_email: 'parent_pers_email'
};

exports.Prisma.periodOrderByRelevanceFieldEnum = {
  period_status: 'period_status'
};

exports.Prisma.rolesOrderByRelevanceFieldEnum = {
  role_name: 'role_name',
  role_description: 'role_description'
};

exports.Prisma.school_emailOrderByRelevanceFieldEnum = {
  school_email: 'school_email',
  school_email_label: 'school_email_label'
};

exports.Prisma.school_infoOrderByRelevanceFieldEnum = {
  school_name: 'school_name',
  school_address: 'school_address',
  school_princ: 'school_princ'
};

exports.Prisma.school_numOrderByRelevanceFieldEnum = {
  school_phone: 'school_phone',
  school_phone_label: 'school_phone_label'
};

exports.Prisma.studentOrderByRelevanceFieldEnum = {
  student_id: 'student_id',
  student_fname: 'student_fname',
  student_lname: 'student_lname',
  student_account: 'student_account',
  student_pass: 'student_pass',
  note: 'note'
};

exports.Prisma.subject_classOrderByRelevanceFieldEnum = {
  subject_code: 'subject_code'
};

exports.Prisma.subjectsOrderByRelevanceFieldEnum = {
  subject_code: 'subject_code',
  subject_name: 'subject_name'
};

exports.Prisma.testOrderByRelevanceFieldEnum = {
  test_title: 'test_title',
  test_description: 'test_description',
  test_visibility: 'test_visibility'
};

exports.Prisma.test_resultOrderByRelevanceFieldEnum = {
  student_id: 'student_id',
  test_note: 'test_note'
};

exports.Prisma.classesOrderByRelevanceFieldEnum = {
  class_code: 'class_code',
  class_name: 'class_name',
  class_base: 'class_base'
};
exports.final_grade_test_period = exports.$Enums.final_grade_test_period = {
  c1: 'c1',
  e1: 'e1',
  c2: 'c2',
  e2: 'e2',
  c3: 'c3',
  e3: 'e3',
  c4: 'c4',
  e4: 'e4'
};

exports.subjects_subject_cat = exports.$Enums.subjects_subject_cat = {
  Scientific: 'Scientific',
  Literature: 'Literature',
  Activity: 'Activity',
  Other: 'Other'
};

exports.test_test_period = exports.$Enums.test_test_period = {
  c1: 'c1',
  e1: 'e1',
  c2: 'c2',
  e2: 'e2',
  c3: 'c3',
  e3: 'e3',
  c4: 'c4',
  e4: 'e4'
};

exports.Prisma.ModelName = {
  active_class: 'active_class',
  agenda: 'agenda',
  employee: 'employee',
  employee_role: 'employee_role',
  final_grade: 'final_grade',
  job: 'job',
  parent: 'parent',
  period: 'period',
  roles: 'roles',
  school_email: 'school_email',
  school_info: 'school_info',
  school_num: 'school_num',
  student: 'student',
  subject_class: 'subject_class',
  subjects: 'subjects',
  test: 'test',
  test_result: 'test_result',
  classes: 'classes',
  parent_form: 'parent_form'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
